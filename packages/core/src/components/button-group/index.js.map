{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAG5D,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,UAAU;IAgBpC,MAAM;QACb,OAAO,IAAI,CAAA,eAAe,CAAC;IAC7B,CAAC;;AAjBe,sBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;GAa3B,AAbqB,CAapB;AAdS,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CAmB3B;;AAGM,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAmC1C;QACE,KAAK,EAAE,CAAC;QATV,SAAI,GAAoB,GAAG,CAAC;QAG5B,UAAK,GAAoB,KAAK,CAAC;QAGvB,UAAK,GAAG,KAAK,CAAC;QAIpB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC/D,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAClE,CAAC;IAEO,mBAAmB,CAAC,CAAa;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAc,CAAC,EAAE,CAAC;YACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;oBACK,IAAI,CAAC,aAAa;;;wCAGE,IAAI,CAAC,KAAK;;;KAG7C,CAAC;IACJ,CAAC;;AApEe,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;GAuB3B,AAvBqB,CAuBpB;AAGF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACC;AAG5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CACI;AAGvB;IADP,KAAK,EAAE;2CACc;AAjCX,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAsExB;;AAGM,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAuBrC,MAAM;QACb,OAAO,IAAI,CAAA;;;;KAIV,CAAC;IACJ,CAAC;;AA5Be,uBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;GAoB3B,AApBqB,CAoBpB;AArBS,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CA8B5B","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\n\n@customElement(\"watt-button-group\")\nexport class WattButtonGroup extends LitElement {\n  static override styles = css`\n    :host {\n      display: inline-flex;\n      gap: 1px;\n    }\n\n    ::slotted(watt-button:not(:last-child)) {\n      --button-border-right-radius: 0;\n    }\n\n    ::slotted(watt-button:not(:first-child)) {\n      --button-border-left-radius: 0;\n    }\n  `;\n\n  override render() {\n    return html`<slot></slot>`;\n  }\n}\n\n@customElement(\"watt-dropdown\")\nexport class WattDropdown extends LitElement {\n  static override styles = css`\n    :host {\n      display: inline-block;\n      position: relative;\n    }\n\n    .content {\n      position: absolute;\n      top: 100%;\n      right: 0;\n      margin-top: var(--n-space-xs);\n      min-width: 200px;\n      background: white;\n      border-radius: var(--n-border-radius);\n      border: 1px solid var(--n-color-border);\n      box-shadow: var(--n-box-shadow-popout);\n      z-index: var(--n-index-popout);\n      display: none;\n    }\n\n    .content[data-open] {\n      display: block;\n    }\n  `;\n\n  @property({ type: String })\n  size: \"s\" | \"m\" | \"l\" = \"m\";\n\n  @property({ type: String })\n  align: \"start\" | \"end\" = \"end\";\n\n  @state()\n  private _open = false;\n\n  constructor() {\n    super();\n    this._handleClickOutside = this._handleClickOutside.bind(this);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    document.addEventListener(\"click\", this._handleClickOutside);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener(\"click\", this._handleClickOutside);\n  }\n\n  private _handleClickOutside(e: MouseEvent) {\n    if (!this.contains(e.target as Node)) {\n      this._open = false;\n    }\n  }\n\n  private _handleToggle() {\n    this._open = !this._open;\n  }\n\n  override render() {\n    return html`\n      <div @click=${this._handleToggle}>\n        <slot name=\"toggle\"></slot>\n      </div>\n      <div class=\"content\" ?data-open=${this._open} role=\"menu\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\n@customElement(\"watt-dropdown-item\")\nexport class WattDropdownItem extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n    }\n\n    button {\n      width: 100%;\n      padding: var(--n-space-s) var(--n-space-m);\n      border: none;\n      background: none;\n      text-align: left;\n      cursor: pointer;\n      font-family: inherit;\n      color: var(--n-color-text);\n      transition: background-color var(--n-transition-quickly);\n    }\n\n    button:hover {\n      background-color: var(--n-color-surface-lowered);\n    }\n  `;\n\n  override render() {\n    return html`\n      <button role=\"menuitem\">\n        <slot></slot>\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"watt-button-group\": WattButtonGroup;\n    \"watt-dropdown\": WattDropdown;\n    \"watt-dropdown-item\": WattDropdownItem;\n  }\n}\n"]}