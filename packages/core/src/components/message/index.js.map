{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;QA2FL,cAAS,GAAG,KAAK,CAAC;QAGlB,WAAM,GAAG,KAAK,CAAC;IAyCjB,CAAC;IAvCU,KAAK,CAAC,OAAsB;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrE,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAEQ,IAAI;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrE,MAAM,EAAE,IAAI,EAAE,CAAC;IACjB,CAAC;IAEQ,KAAK;QACZ,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrE,MAAM,EAAE,KAAK,EAAE,CAAC;IAClB,CAAC;IAEO,aAAa;QACnB,OAAO,IAAI,CAAA;;;;;;;;KAQV,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,qDAAqD;QACrD,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,OAAO,IAAI,CAAA;mBACE,IAAI,CAAC,IAAI;YAChB,IAAI,CAAC,aAAa,EAAE;;OAEzB,CAAC;QACJ,CAAC;QAED,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;IAC9B,CAAC;;AArIe,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoF3B,AApFqB,CAoFpB;AAGF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;yCAC5B;AAGd;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;8CACzB;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CAC5B;AA9FJ,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CAuIvB","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"watt-message\")\nexport class WattMessage extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      font-family: var(--n-font-family);\n      padding: var(--n-space-s) var(--n-space-m);\n      border-bottom: 1px solid var(--n-color-border);\n      text-decoration: none;\n      color: inherit;\n    }\n\n    :host([unread]) {\n      background-color: var(--n-color-surface-raised);\n    }\n\n    :host([highlight]) {\n      animation: highlight 30s ease-out forwards;\n    }\n\n    @keyframes highlight {\n      0% {\n        background-color: var(--n-color-surface-raised);\n      }\n      100% {\n        background-color: transparent;\n      }\n    }\n\n    .message-content {\n      display: flex;\n      align-items: baseline;\n      gap: var(--n-space-xs);\n      color: var(--n-color-text);\n      font-size: var(--n-font-size-m);\n      line-height: var(--n-line-height);\n    }\n\n    .message-dot {\n      width: 6px;\n      height: 6px;\n      background: var(--n-color-accent);\n      border-radius: var(--n-border-radius-circle);\n      margin-top: 8px;\n      flex-shrink: 0;\n      display: none;\n    }\n\n    :host([unread]) .message-dot {\n      display: block;\n    }\n\n    ::slotted([slot=\"footer\"]) {\n      display: block;\n      margin-top: var(--n-space-xs);\n      margin-left: calc(6px + var(--n-space-xs));\n      color: var(--n-color-text-weak);\n      font-size: var(--n-font-size-s);\n    }\n\n    :host(:hover) {\n      background: var(--n-color-surface-raised);\n    }\n\n    .person-name {\n      color: var(--n-color-text-link);\n      text-decoration: none;\n    }\n\n    .person-name:hover {\n      text-decoration: underline;\n    }\n\n    .pet-name {\n      color: var(--n-color-text-link);\n      text-decoration: none;\n    }\n\n    .pet-name:hover {\n      text-decoration: underline;\n    }\n\n    :host(:focus-visible) {\n      outline: 2px solid var(--n-color-accent);\n      outline-offset: -2px;\n    }\n  `;\n\n  @property({ type: String, reflect: true })\n  href?: string;\n\n  @property({ type: Boolean, reflect: true })\n  highlight = false;\n\n  @property({ type: Boolean, reflect: true })\n  unread = false;\n\n  override focus(options?: FocusOptions): void {\n    const target = this.href ? this.renderRoot.querySelector('a') : this;\n    target?.focus(options);\n  }\n\n  override blur(): void {\n    const target = this.href ? this.renderRoot.querySelector('a') : this;\n    target?.blur();\n  }\n\n  override click(): void {\n    const target = this.href ? this.renderRoot.querySelector('a') : this;\n    target?.click();\n  }\n\n  private renderContent() {\n    return html`\n      <div class=\"message-content\">\n        <div class=\"message-dot\"></div>\n        <div>\n          <slot></slot>\n        </div>\n      </div>\n      <slot name=\"footer\"></slot>\n    `;\n  }\n\n  override render() {\n    // If href is provided, wrap content in an anchor tag\n    if (this.href) {\n      return html`\n        <a href=\"${this.href}\" class=\"message-link\">\n          ${this.renderContent()}\n        </a>\n      `;\n    }\n\n    return this.renderContent();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"watt-message\": WattMessage;\n  }\n}"]}