{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\n\nconst SIZES = {\n  s: '400px',\n  m: '600px', \n  l: '800px',\n  xl: '1000px'\n} as const;\n\n@customElement('watt-modal')\nexport class WattModal extends LitElement {\n  static override styles = css`\n    :host {\n      display: none;\n      font-family: var(--n-font-family);\n    }\n\n    :host([open]) {\n      display: block;\n    }\n\n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: var(--n-color-overlay);\n      z-index: var(--n-index-modal);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: var(--n-space-m);\n    }\n\n    .modal {\n      background: var(--n-color-surface);\n      border-radius: var(--n-border-radius);\n      box-shadow: var(--n-box-shadow-modal);\n      max-width: 100%;\n      width: var(--modal-width);\n      margin: auto;\n      display: flex;\n      flex-direction: column;\n      position: relative;\n      max-height: calc(100vh - var(--n-space-xl));\n    }\n\n    .modal-header {\n      padding: var(--n-space-m);\n      border-bottom: 1px solid var(--n-color-border);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    .modal-close {\n      background: none;\n      border: none;\n      padding: var(--n-space-xs);\n      cursor: pointer;\n      color: var(--n-color-text);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: var(--n-border-radius);\n      transition: background var(--n-transition-slowly);\n    }\n\n    .modal-close:hover {\n      background: var(--n-color-surface-lowered);\n    }\n\n    .modal-body {\n      padding: var(--n-space-m);\n      overflow: auto;\n      flex: 1;\n    }\n\n    :host(:not([scrollable])) .modal-body {\n      overflow: visible;\n    }\n    \n    :host(:not([scrollable])) .modal {\n      overflow: auto;\n    }\n\n    .modal-footer {\n      padding: var(--n-space-m);\n      border-top: 1px solid var(--n-color-border);\n      display: flex;\n      justify-content: flex-end;\n      gap: var(--n-space-s);\n    }\n\n    /* Initial animation states */\n    .modal-backdrop {\n      opacity: 0;\n      transition: opacity var(--n-transition-slowly);\n    }\n\n    .modal {\n      transform: translateY(20px);\n      opacity: 0;\n      transition: transform var(--n-transition-slowly),\n                  opacity var(--n-transition-slowly);\n    }\n\n    /* Animation end states */\n    :host([open]) .modal-backdrop {\n      opacity: 1;\n    }\n\n    :host([open]) .modal {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  `;\n\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  @property({ type: String, reflect: true })\n  size: keyof typeof SIZES = 'm';\n\n  @property({ type: String })\n  returnValue = '';\n\n  @property({ type: Boolean, reflect: true })\n  scrollable = false;\n\n  @query('.modal')\n  private modalElement!: HTMLElement;\n\n  @query('.modal-backdrop') \n  private backdropElement!: HTMLElement;\n\n  override firstUpdated() {\n    this.style.setProperty('--modal-width', SIZES[this.size]);\n  }\n\n  private close(returnValue?: string) {\n    const canClose = this.dispatchEvent(new CustomEvent('cancel', {\n      cancelable: true\n    }));\n\n    if (canClose) {\n      if (returnValue !== undefined) {\n        this.returnValue = returnValue;\n      }\n      \n      this.open = false;\n      this.dispatchEvent(new CustomEvent('close'));\n    }\n  }\n\n  private handleBackdropClick(e: MouseEvent) {\n    if (e.target === this.backdropElement) {\n      this.close();\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  protected override updated(changedProps: Map<string, unknown>) {\n    if (changedProps.has('open')) {\n      if (this.open) {\n        // Focus management when opening\n        requestAnimationFrame(() => {\n          const autoFocusTarget = this.modalElement.querySelector('[autofocus]') as HTMLElement;\n          if (autoFocusTarget) {\n            autoFocusTarget.focus();\n          } else {\n            const firstFocusable = this.modalElement.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])') as HTMLElement;\n            if (firstFocusable) {\n              firstFocusable.focus();\n            }\n          }\n        });\n\n        // Add event listeners\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\n      } else {\n        // Remove event listeners\n        document.removeEventListener('keydown', this.handleKeyDown.bind(this));\n      }\n    }\n  }\n\n  override render() {\n    return html`\n      <div \n        class=\"modal-backdrop\"\n        @click=${this.handleBackdropClick}\n      >\n        <div \n          class=\"modal\"\n          role=\"dialog\" \n          aria-modal=\"true\"\n        >\n          <header class=\"modal-header\">\n            <slot name=\"header\"></slot>\n            <button \n              class=\"modal-close\"\n              @click=${() => this.close()}\n              aria-label=\"Close modal\"\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"M18 6L6 18M6 6l12 12\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n              </svg>\n            </button>\n          </header>\n          \n          <div class=\"modal-body\">\n            <slot></slot>\n          </div>\n\n          <footer class=\"modal-footer\">\n            <slot name=\"footer\"></slot>\n          </footer>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'watt-modal': WattModal;\n  }\n}"]}