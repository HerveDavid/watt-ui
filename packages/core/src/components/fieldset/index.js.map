{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAuEL,UAAK,GAAG,EAAE,CAAC;QASX,aAAQ,GAAG,KAAK,CAAC;QAGjB,iBAAY,GAAG,KAAK,CAAC;QAGrB,cAAS,GAAG,KAAK,CAAC;QAGlB,SAAI,GAAc,GAAG,CAAC;IAuCxB,CAAC;IArCU,MAAM;QACb,OAAO,IAAI,CAAA;gCACiB,IAAI,CAAC,QAAQ,iBAAiB,CAAC,CAAC,IAAI,CAAC,KAAK;;+BAE3C,IAAI,CAAC,KAAK;YAC7B,IAAI,CAAC,QAAQ;YACb,CAAC,CAAC,IAAI,CAAA,oDAAoD;YAC1D,CAAC,CAAC,EAAE;;;;;UAKN,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;YAChC,CAAC,CAAC,IAAI,CAAA;;oCAEoB,IAAI,CAAC,IAAI;;aAEhC;YACH,CAAC,CAAC,EAAE;UACJ,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;YAClC,CAAC,CAAC,IAAI,CAAA;;qCAEqB,IAAI,CAAC,KAAK;;aAElC;YACH,CAAC,CAAC,EAAE;;KAET,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IAEO,aAAa;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAChD,CAAC;;AA9He,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmE3B,AAnEqB,CAmEpB;AAGF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CAC/B;AAGX;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACb;AAGd;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CAC3B;AAGf;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;8CAC1B;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;kDAClD;AAGrB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;+CAClD;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CACpB;AAzFX,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAgIxB","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"watt-fieldset\")\nexport class WattFieldset extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      font-family: var(--n-font-family);\n    }\n\n    fieldset {\n      margin: 0;\n      padding: var(--n-space-m);\n      border: 1px solid var(--n-color-border);\n      border-radius: var(--n-border-radius);\n    }\n\n    legend {\n      padding: 0 var(--n-space-xs);\n      color: var(--n-color-text);\n      font-weight: var(--n-font-weight);\n      font-size: var(--n-font-size-m);\n      line-height: var(--n-line-height);\n    }\n\n    :host([size=\"s\"]) legend {\n      font-size: var(--n-font-size-s);\n    }\n\n    :host([hide-label]) legend {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      border: 0;\n    }\n\n    .required {\n      color: var(--n-color-text-error);\n      margin-left: var(--n-space-xs);\n    }\n\n    :host([hide-required]) .required {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      border: 0;\n    }\n\n    .hint {\n      margin-top: var(--n-space-xs);\n      color: var(--n-color-text-weak);\n      font-size: var(--n-font-size-s);\n    }\n\n    .error {\n      margin-top: var(--n-space-xs);\n      color: var(--n-color-text-error);\n      font-size: var(--n-font-size-s);\n    }\n\n    :host([error]) fieldset {\n      border-color: var(--n-color-text-error);\n    }\n  `;\n\n  @property({ type: String, reflect: true })\n  label = \"\";\n\n  @property({ type: String })\n  hint?: string;\n\n  @property({ type: String, reflect: true })\n  error?: string;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: Boolean, reflect: true, attribute: \"hide-required\" })\n  hideRequired = false;\n\n  @property({ type: Boolean, reflect: true, attribute: \"hide-label\" })\n  hideLabel = false;\n\n  @property({ type: String, reflect: true })\n  size: \"s\" | \"m\" = \"m\";\n\n  override render() {\n    return html`\n      <fieldset aria-required=${this.required} aria-invalid=${!!this.error}>\n        <legend>\n          <slot name=\"label\">${this.label}</slot>\n          ${this.required\n            ? html`<span class=\"required\" aria-hidden=\"true\">*</span>`\n            : \"\"}\n        </legend>\n\n        <slot></slot>\n\n        ${this.hint || this._hasHintSlot()\n          ? html`\n              <div class=\"hint\" id=\"hint\">\n                <slot name=\"hint\">${this.hint}</slot>\n              </div>\n            `\n          : \"\"}\n        ${this.error || this._hasErrorSlot()\n          ? html`\n              <div class=\"error\" id=\"error\" role=\"alert\">\n                <slot name=\"error\">${this.error}</slot>\n              </div>\n            `\n          : \"\"}\n      </fieldset>\n    `;\n  }\n\n  private _hasHintSlot() {\n    return !!this.querySelector('[slot=\"hint\"]');\n  }\n\n  private _hasErrorSlot() {\n    return !!this.querySelector('[slot=\"error\"]');\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"watt-fieldset\": WattFieldset;\n  }\n}\n"]}