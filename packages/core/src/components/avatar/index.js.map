{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;QAgEL,SAAI,GAAG,EAAE,CAAC;QAGV,QAAG,GAAG,EAAE,CAAC;QAGT,SAAI,GAA0C,GAAG,CAAC;IAuBpD,CAAC;IArBC;;OAEG;IACK,WAAW,CAAC,IAAY;QAC9B,OAAO,IAAI;aACR,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC3B,IAAI,CAAC,EAAE,CAAC;aACR,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;kDACmC,IAAI,CAAC,IAAI;UACjD,IAAI,CAAC,GAAG;YACR,CAAC,CAAC,IAAI,CAAA,YAAY,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC,IAAI,KAAK;YAChD,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;KAElC,CAAC;IACJ,CAAC;;AA3Fe,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4D3B,AA5DqB,CA4DpB;AAGF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wCACjB;AAGV;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCAClB;AAGT;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;wCACQ;AAtEvC,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CA6FtB","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"watt-avatar\")\nexport class WattAvatar extends LitElement {\n  static override styles = css`\n    :host {\n      display: inline-block;\n      position: relative;\n    }\n\n    .avatar {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: var(--n-border-radius-circle);\n      background-color: var(--n-color-surface-lowered);\n      color: var(--n-color-text);\n      font-family: var(--n-font-family);\n      font-weight: var(--n-font-weight);\n      overflow: hidden;\n    }\n\n    .avatar img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n\n    /* Size variants */\n    :host([size=\"xs\"]) .avatar {\n      width: var(--n-size-icon-xs);\n      height: var(--n-size-icon-xs);\n      font-size: calc(var(--n-size-icon-xs) * 0.4);\n    }\n\n    :host([size=\"s\"]) .avatar {\n      width: var(--n-size-icon-s);\n      height: var(--n-size-icon-s);\n      font-size: calc(var(--n-size-icon-s) * 0.4);\n    }\n\n    :host([size=\"m\"]) .avatar {\n      width: var(--n-size-icon-m);\n      height: var(--n-size-icon-m);\n      font-size: calc(var(--n-size-icon-m) * 0.4);\n    }\n\n    :host([size=\"l\"]) .avatar {\n      width: var(--n-size-icon-l);\n      height: var(--n-size-icon-l);\n      font-size: calc(var(--n-size-icon-l) * 0.4);\n    }\n\n    :host([size=\"xl\"]) .avatar {\n      width: var(--n-size-icon-xl);\n      height: var(--n-size-icon-xl);\n      font-size: calc(var(--n-size-icon-xl) * 0.4);\n    }\n\n    :host([size=\"xxl\"]) .avatar {\n      width: var(--n-size-icon-xxl);\n      height: var(--n-size-icon-xxl);\n      font-size: calc(var(--n-size-icon-xxl) * 0.4);\n    }\n  `;\n\n  @property({ type: String })\n  name = \"\";\n\n  @property({ type: String })\n  src = \"\";\n\n  @property({ type: String, reflect: true })\n  size: \"xs\" | \"s\" | \"m\" | \"l\" | \"xl\" | \"xxl\" = \"m\";\n\n  /**\n   * Gets the initials from a name string\n   */\n  private getInitials(name: string): string {\n    return name\n      .split(\" \")\n      .map(part => part.charAt(0))\n      .join(\"\")\n      .toUpperCase()\n      .substring(0, 2);\n  }\n\n  override render() {\n    return html`\n      <div class=\"avatar\" role=\"img\" aria-label=${this.name}>\n        ${this.src\n          ? html`<img src=${this.src} alt=${this.name} />`\n          : this.getInitials(this.name)}\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"watt-avatar\": WattAvatar;\n  }\n}"]}