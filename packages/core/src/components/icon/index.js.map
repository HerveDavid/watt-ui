{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\ntype IconSize = 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl';\ntype IconResolver = (name: string) => string | Promise<string>;\n\n@customElement('watt-icon')\nexport class WattIcon extends LitElement {\n  static override styles = css`\n    :host {\n      display: inline-block;\n      width: var(--n-size-icon-m);\n      height: var(--n-size-icon-m);\n      color: var(--n-color-icon);\n      vertical-align: middle;\n    }\n\n    :host([size='xxs']) {\n      width: var(--n-size-icon-xxs);\n      height: var(--n-size-icon-xxs);\n    }\n\n    :host([size='xs']) {\n      width: var(--n-size-icon-xs);\n      height: var(--n-size-icon-xs);\n    }\n\n    :host([size='s']) {\n      width: var(--n-size-icon-s);\n      height: var(--n-size-icon-s);\n    }\n\n    :host([size='l']) {\n      width: var(--n-size-icon-l);\n      height: var(--n-size-icon-l);\n    }\n\n    :host([size='xl']) {\n      width: var(--n-size-icon-xl);\n      height: var(--n-size-icon-xl);\n    }\n\n    :host([size='xxl']) {\n      width: var(--n-size-icon-xxl);\n      height: var(--n-size-icon-xxl);\n    }\n\n    svg {\n      display: block;\n      width: 100%;\n      height: 100%;\n      fill: currentColor;\n      transition: var(--n-transition-quickly);\n    }\n\n    :host(:hover) {\n      color: var(--n-color-icon-hover);\n    }\n  `;\n\n  private static iconRegistry = new Map<string, string>();\n  private static resolver: IconResolver | undefined;\n\n  @property({ type: String, reflect: true })\n  name = '';\n\n  @property({ type: String, reflect: true })\n  size: IconSize = 'm';\n\n  @property({ type: String })\n  color?: string;\n\n  @property({ type: String })\n  label?: string;\n\n  static registerResolver(resolver: IconResolver): void {\n    WattIcon.resolver = resolver;\n  }\n\n  static registerIcon(iconOrName: string | { title: string; default: string }, icon?: string): void {\n    if (typeof iconOrName === 'string') {\n      if (icon) {\n        WattIcon.iconRegistry.set(iconOrName, icon);\n      }\n    } else {\n      WattIcon.iconRegistry.set(iconOrName.title, iconOrName.default);\n    }\n  }\n\n  private async getIcon(): Promise<string | undefined> {\n    const cachedIcon = WattIcon.iconRegistry.get(this.name);\n    if (cachedIcon) return cachedIcon;\n\n    if (WattIcon.resolver) {\n      try {\n        const resolvedIcon = await WattIcon.resolver(this.name);\n        WattIcon.iconRegistry.set(this.name, resolvedIcon);\n        return resolvedIcon;\n      } catch (error) {\n        console.warn(`Failed to load icon: ${this.name}`, error);\n      }\n    }\n    \n    return undefined;\n  }\n\n  override render() {\n    const ariaHidden = this.label ? 'false' : 'true';\n    const ariaLabel = this.label || undefined;\n    const style = this.color ? `color: ${this.color}` : '';\n\n    return html`\n      <slot>\n        <svg \n          part=\"svg\"\n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 48 48\"\n          aria-hidden=${ariaHidden}\n          aria-label=${ariaLabel || nothing}\n          role=${this.label ? 'img' : 'presentation'}\n          style=${style}\n        >\n          ${this.name ? this.renderIcon() : nothing}\n        </svg>\n      </slot>\n    `;\n  }\n\n  private async renderIcon() {\n    const icon = await this.getIcon();\n    if (!icon) {\n      console.warn(`Icon not found: ${this.name}`);\n      return nothing;\n    }\n\n    const template = document.createElement('template');\n    template.innerHTML = icon;\n    return template.content;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'watt-icon': WattIcon;\n  }\n}"]}